name: SORACOM Orbit CI/CD

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  SORALET_ID: soralet-github-action-test
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kenichiro-kimura/orbit-assemblyscript:latest
      options: --cpus 1
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_CONTAINER_REGISTRY_PASSWORD }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: initialize
        run: npm run init
      - name: copy libs
        run: cp -r /workspaces/orbit-sdk-assemblyscript ../
      - name: build
        run: npm run build
      - name: build optimized
        run: npm run build:optimized
      - name: test
        run: npm run test -- -u
      - name: upload assets
        uses: actions/upload-artifact@v2
        with:
          name: soracom-orbit
          path: build/soralet-optimized.wasm
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: soracom-orbit
      - name: install soracom-cli
        run: curl -fsSL https://raw.githubusercontent.com/soracom/soracom-cli/master/install.sh | bash
      - name: deploy
        env:
          AUTH_KEY: ${{ secrets.AUTH_KEY }}
          AUTH_KEY_ID: ${{ secrets.AUTH_KEY_ID}}
          COVERAGE: ${{ secrets.COVERAGE }}
          SORALET_ID: ${{ env.SORALET_ID }}
        run: | 
          x=$(/usr/local/bin/soracom --coverage-type $COVERAGE --auth-key-id $AUTH_KEY_ID --auth-key $AUTH_KEY soralets get --soralet-id $SORALET_ID 2>&1)
          if [[ $x == "Error"* ]]; then
            /usr/local/bin/soracom --coverage-type $COVERAGE --auth-key-id $AUTH_KEY_ID --auth-key $AUTH_KEY soralets create --soralet-id $SORALET_ID
          fi
          /usr/local/bin/soracom --coverage-type $COVERAGE --auth-key-id $AUTH_KEY_ID --auth-key $AUTH_KEY soralets upload --soralet-id $SORALET_ID --content-type application/octet-stream --body @soralet-optimized.wasm
